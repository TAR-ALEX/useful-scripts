#!/bin/python3
import os
import glob
from PIL import Image
import shutil
import sys

def parse_dimensions(dimensions):
    try:
        width, height = map(int, dimensions.split('x'))
        return width, height
    except ValueError:
        raise ValueError("Invalid format for dimensions. Use WidthxHeight, e.g., 800x600")

# Get the dimensions from command-line arguments or default to 512x512
if len(sys.argv) > 1:
    dimensions = sys.argv[1]
else:
    dimensions = "512x512"

try:
    min_width, min_height = parse_dimensions(dimensions)
except ValueError as e:
    print(e)
    sys.exit(1)

# Get the current working directory
cwd = os.getcwd()

# Define the subfolder for small images
small_images_folder = os.path.join(cwd, 'small')

# Create the subfolder if it doesn't exist
if not os.path.exists(small_images_folder):
    os.makedirs(small_images_folder)

# Get all image files in the directory
image_files = glob.glob(os.path.join(cwd, '*'))

# Iterate through the image files
for image_file in image_files:
    try:
        # Open the image file
        with Image.open(image_file) as img:
            width, height = img.size
            # Check if the image is smaller than the specified size
            if width < min_width or height < min_height:
                print(f"Moving {image_file} - Size: {width}x{height}")
                # Move the file to the small images subfolder
                shutil.move(image_file, os.path.join(small_images_folder, os.path.basename(image_file)))
    except Exception as e:
        # Print any errors (such as if the file is not an image)
        print(f"Error processing {image_file}: {e}")

